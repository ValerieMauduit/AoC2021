import os
import sys
import pytest

current_dir = os.path.dirname(os.path.realpath(__file__))
parent_dir = os.path.dirname(current_dir)
sys.path.append(parent_dir)

from all_days import day18

test_set = [
    (['[1, 1]', '[2, 2]', '[3, 3]', '[4, 4]'], '[[[[1, 1], [2, 2]], [3, 3]], [4, 4]]'),
    (['[1, 1]', '[2, 2]', '[3, 3]', '[4, 4]', '[5, 5]'], '[[[[3, 0], [5, 3]], [4, 4]], [5, 5]]'),
    (['[1, 1]', '[2, 2]', '[3, 3]', '[4, 4]', '[5, 5]', '[6, 6]'], '[[[[5, 0], [7, 4]], [5, 5]], [6, 6]]'),
    (
        ['[[[0, [4, 5]], [0, 0]], [[[4, 5], [2, 6]], [9, 5]]]', '[7, [[[3, 7], [4, 3]], [[6, 3], [8, 8]]]]'],
        '[[[[4, 0], [5, 4]], [[7, 7], [6, 0]]], [[8, [7, 7]], [[7, 9], [5, 0]]]]'
    ), (
        [
            '[[[[4, 0], [5, 4]], [[7, 7], [6, 0]]], [[8, [7, 7]], [[7, 9], [5, 0]]]]',
            '[[2, [[0, 8], [3, 4]]], [[[6, 7], 1], [7, [1, 6]]]]'
        ],
        '[[[[6, 7], [6, 7]], [[7, 7], [0, 7]]], [[[8, 7], [7, 7]], [[8, 8], [8, 0]]]]'
    ), (
        [
            '[[[[6, 7], [6, 7]], [[7, 7], [0, 7]]], [[[8, 7], [7, 7]], [[8, 8], [8, 0]]]]',
            '[[[[2, 4], 7], [6, [0, 5]]], [[[6, 8], [2, 8]], [[2, 1], [4, 5]]]]'
        ],
        '[[[[7, 0], [7, 7]], [[7, 7], [7, 8]]], [[[7, 7], [8, 8]], [[7, 7], [8, 7]]]]'
    ), (
        ['[[[[7, 0], [7, 7]], [[7, 7], [7, 8]]], [[[7, 7], [8, 8]], [[7, 7], [8, 7]]]]', '[7, [5, [[3, 8], [1, 4]]]]'],
        '[[[[7, 7], [7, 8]], [[9, 5], [8, 7]]], [[[6, 8], [0, 8]], [[9, 9], [9, 0]]]]'
    ), (
        ['[[[[7, 7], [7, 8]], [[9, 5], [8, 7]]], [[[6, 8], [0, 8]], [[9, 9], [9, 0]]]]', '[[2, [2, 2]], [8, [8, 1]]]'],
        '[[[[6, 6], [6, 6]], [[6, 0], [6, 7]]], [[[7, 7], [8, 9]], [8, [8, 1]]]]'
    ), (
        ['[[[[6, 6], [6, 6]], [[6, 0], [6, 7]]], [[[7, 7], [8, 9]], [8, [8, 1]]]]', '[2, 9]'],
        '[[[[6, 6], [7, 7]], [[0, 7], [7, 7]]], [[[5, 5], [5, 6]], 9]]'
    ), (
        ['[[[[6, 6], [7, 7]], [[0, 7], [7, 7]]], [[[5, 5], [5, 6]], 9]]', '[1, [[[9, 3], 9], [[9, 0], [0, 7]]]]'],
        '[[[[7, 8], [6, 7]], [[6, 8], [0, 8]]], [[[7, 7], [5, 0]], [[5, 5], [5, 6]]]]'
    ), (
        ['[[[[7, 8], [6, 7]], [[6, 8], [0, 8]]], [[[7, 7], [5, 0]], [[5, 5], [5, 6]]]]', '[[[5, [7, 4]], 7], 1]'],
        '[[[[7, 7], [7, 7]], [[8, 7], [8, 7]]], [[[7, 0], [7, 7]], 9]]'
    ), (
        ['[[[[7, 7], [7, 7]], [[8, 7], [8, 7]]], [[[7, 0], [7, 7]], 9]]', '[[[[4, 2], 2], 6], [8, 7]]'],
        '[[[[8, 7], [7, 7]], [[8, 6], [7, 7]]], [[[0, 7], [6, 6]], [8, 7]]]'
    ), (
        [
            '[[[0, [4, 5]], [0, 0]], [[[4, 5], [2, 6]], [9, 5]]]', '[7, [[[3, 7], [4, 3]], [[6, 3], [8, 8]]]]',
            '[[2, [[0, 8], [3, 4]]], [[[6, 7], 1], [7, [1, 6]]]]',
            '[[[[2, 4], 7], [6, [0, 5]]], [[[6, 8], [2, 8]], [[2, 1], [4, 5]]]]', '[7, [5, [[3, 8], [1, 4]]]]',
            '[[2, [2, 2]], [8, [8, 1]]]', '[2, 9]', '[1, [[[9, 3], 9], [[9, 0], [0, 7]]]]', '[[[5, [7, 4]], 7], 1]',
            '[[[[4, 2], 2], 6], [8, 7]]'
        ],
        '[[[[8, 7], [7, 7]], [[8, 6], [7, 7]]], [[[0, 7], [6, 6]], [8, 7]]]'
    ), (
        [
            '[[[0, [5, 8]], [[1, 7], [9, 6]]], [[4, [1, 2]], [[1, 4], 2]]]', '[[[5, [2, 8]], 4], [5, [[9, 9], 0]]]',
            '[6, [[[6, 2], [5, 6]], [[7, 6], [4, 7]]]]', '[[[6, [0, 7]], [0, 9]], [4, [9, [9, 0]]]]',
            '[[[7, [6, 4]], [3, [1, 3]]], [[[5, 5], 1], 9]]', '[[6, [[7, 3], [3, 2]]], [[[3, 8], [5, 7]], 4]]',
            '[[[[5, 4], [7, 7]], 8], [[8, 3], 8]]', '[[9, 3], [[9, 9], [6, [4, 9]]]]',
            '[[2, [[7, 7], 7]], [[5, 8], [[9, 3], [0, 2]]]]', '[[[[5, 2], 5], [8, [3, 7]]], [[5, [7, 5]], [4, 4]]]'
        ],
        '[[[[6, 6], [7, 6]], [[7, 7], [7, 0]]], [[[7, 7], [7, 7]], [[7, 8], [9, 9]]]]'
    )
]

magnitudes = [
    ('[9, 1]', 29), ('[1, 9]', 21), ('[[9, 1], [1, 9]]', 129), ('[[1, 2], [[3, 4], 5]]', 143),
    ('[[[[0, 7], 4], [[7, 8], [6, 0]]], [8, 1]]', 1384), ('[[[[1, 1], [2, 2]], [3, 3]], [4, 4]]', 445),
    ('[[[[3, 0], [5, 3]], [4, 4]], [5, 5]]', 791), ('[[[[5, 0], [7, 4]], [5, 5]], [6, 6]]', 1137),
    ('[[[[8, 7], [7, 7]], [[8, 6], [7, 7]]], [[[0, 7], [6, 6]], [8, 7]]]', 3488),
    ('[[[[6, 6], [7, 6]], [[7, 7], [7, 0]]], [[[7, 7], [7, 7]], [[7, 8], [9, 9]]]]', 4140)
]


@pytest.mark.parametrize("list_of_numbers, snailfish_result", test_set)
def test_snailfish_addition(list_of_numbers, snailfish_result):
    assert day18.snailfish_addition(list_of_numbers).equals(day18.SnailfishNumber(snailfish_result))


@pytest.mark.parametrize("snailfish_number, magnitude", magnitudes)
def test_magnitude(snailfish_number, magnitude):
    assert day18.SnailfishNumber(snailfish_number).magnitude() == magnitude


def test_best_magnitude():
    assert day18.best_magnitude([
        '[[[0, [5, 8]], [[1, 7], [9, 6]]], [[4, [1, 2]], [[1, 4], 2]]]', '[[[5, [2, 8]], 4], [5, [[9, 9], 0]]]',
        '[6, [[[6, 2], [5, 6]], [[7, 6], [4, 7]]]]', '[[[6, [0, 7]], [0, 9]], [4, [9, [9, 0]]]]',
        '[[[7, [6, 4]], [3, [1, 3]]], [[[5, 5], 1], 9]]', '[[6, [[7, 3], [3, 2]]], [[[3, 8], [5, 7]], 4]]',
        '[[[[5, 4], [7, 7]], 8], [[8, 3], 8]]', '[[9, 3], [[9, 9], [6, [4, 9]]]]',
        '[[2, [[7, 7], 7]], [[5, 8], [[9, 3], [0, 2]]]]', '[[[[5, 2], 5], [8, [3, 7]]], [[5, [7, 5]], [4, 4]]]'
    ]) == 3993
